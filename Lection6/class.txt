!!! Классы в C++ !!!

struct Student {
int age;
sting name;
void init(string _name, int _age) {
     age = _age;
     name =_name;
     }
//функция init это метод и вызывается только для экземпляров 
//ЭТО НЕ СТАТИЧЕСКИЙ МЕТОД
//можно присваивать как this -> name и this -> age , но если нет таких глобальних переменных, то можно не писать this _______________________

void print()
    cout << "name: " <<name << "age: " << age << endl;
      
_____________________________
________
int main() {
Student a,b;
a.name = "Masha";
b.name = "Vasya";
a.inti("Petya", 17);

b.print ----> уивидим name: Masha age: случайное число 
т.к. этот атрибут не инитиализирован 
 для этого вместо void init(string _name, int _age) {} пишем Student(string _name, int _age) {}  (это конструктор)  
 
 Теперь "Student a;" работать не будет! 
 Student a("Vasya", 17), b("Masha", 18) только так.
 Мы не можем создать объект без параметров, т.к. нет конструкторо, который не потребляет параметры. 
 Изначально он был (компилятор сам его сделал), но после написания нашего, все - больше не работает. 
 Так же компилятор создает клонирующий конструктор и возможно сделать вот так " Student c(a);". Это тоже конструктор по умолчанию.  
 
 
 Следующий вопрос: как заперетить a.name = "Petya". Сделать так, чтобы не было воможности изменять атрибут после инитиализации потомка класса. 
 
 Для чего это? 
 Взаимодействие к экземплярами класса должно происходить через методы, а не через присваивание атри
 
 
